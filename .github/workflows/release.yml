name: Release

on:
  push:
    tags: ['v*']
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  packages: write

jobs:
  test:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: '1.25'
        cache: true

    - name: Install SQLite development headers
      run: sudo apt-get update && sudo apt-get install -y libsqlite3-dev

    - name: Test GoReleaser config
      uses: goreleaser/goreleaser-action@v6
      with:
        distribution: goreleaser
        version: '~> v2'
        args: check

    - name: Test build (snapshot)
      uses: goreleaser/goreleaser-action@v6
      with:
        distribution: goreleaser
        version: '~> v2'
        args: build --snapshot --clean
  
  release-amd64:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: '1.25'
        cache: true

    - name: Install SQLite development headers
      run: sudo apt-get update && sudo apt-get install -y libsqlite3-dev

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Run GoReleaser (AMD64)
      uses: goreleaser/goreleaser-action@v6
      with:
        distribution: goreleaser
        version: '~> v2'
        args: build --single-target --snapshot --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        GOOS: linux
        GOARCH: amd64

    - name: Upload AMD64 artifacts
      uses: actions/upload-artifact@v4
      with:
        name: forq-amd64
        path: dist/

  release-arm64:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-24.04-arm
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: '1.25'
        cache: true

    - name: Install SQLite development headers
      run: sudo apt-get update && sudo apt-get install -y libsqlite3-dev

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Run GoReleaser (ARM64)
      uses: goreleaser/goreleaser-action@v6
      with:
        distribution: goreleaser
        version: '~> v2'
        args: build --single-target --snapshot --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        GOOS: linux
        GOARCH: arm64

    - name: Upload ARM64 artifacts
      uses: actions/upload-artifact@v4
      with:
        name: forq-arm64
        path: dist/

  release:
    if: github.event_name != 'pull_request'
    needs: [release-amd64, release-arm64]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: '1.25'
        cache: true

    - name: Install SQLite development headers
      run: sudo apt-get update && sudo apt-get install -y libsqlite3-dev

    - name: Download AMD64 artifacts
      uses: actions/download-artifact@v4
      with:
        name: forq-amd64
        path: dist-amd64/

    - name: Download ARM64 artifacts
      uses: actions/download-artifact@v4
      with:
        name: forq-arm64
        path: dist-arm64/

    - name: Merge artifacts
      run: |
        mkdir -p dist
        cp -r dist-amd64/* dist/ 2>/dev/null || true
        cp -r dist-arm64/* dist/ 2>/dev/null || true
        ls -la dist/

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Run GoReleaser (Release)
      uses: goreleaser/goreleaser-action@v6
      with:
        distribution: goreleaser
        version: '~> v2'
        args: release --skip=build
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
